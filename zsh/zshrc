# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="sorin"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git svn tmux colored-man osx rsync brew brew-cask zsh_reload)
export LANG=zh_CN.UTF-8
export PIP2EVAL_TMP_FILE_PATH=/tmp/shm
export PATH=$PATH:/Users/mac/Develop/dotfiles/bin
export PATH=$PATH:/usr/local/Cellar/php55/5.5.27_2/bin

source $(brew --prefix php-version)/php-version.sh && php-version 5

source $ZSH/oh-my-zsh.sh
source ~/Develop/dotfiles/z/z.sh

bindkey -v
bindkey '\e[3~' delete-char
bindkey '^R' history-incremental-search-backward
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^H' backward-delete-char
bindkey '^?' backward-delete-char

fancy-ctrl-z () {
if [[ $#BUFFER -eq 0 ]]; then
    bg
    zle redisplay
  else
    zle push-input
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z
bindkey '^U' backward-kill-line

#source zsh-syntax-hightlighting
source ~/Develop/dotfiles/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh
GHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)


# Customize to your needs...
# set -o vi
alias ll='ls -alh'
alias gdd="git add .&&git commit -m 'update'"

alias tmux='tmux -2'

#ssh
alias ssh-aliyun="ssh root@112.124.55.59"
alias ssh-jjs='ssh -i ~/.ssh/test_rsa.rsa -p 38022 ec2-user@jjshouse.com'
alias ssh-cms='ssh -i ~/.ssh/test_rsa.rsa -p 38022 ec2-user@cms-t.dhvalue.com'


#mongo
alias mongo-start="sudo /usr/local/mongo/servers/mongo-start.sh"
alias mongo-openvim="sudo /usr/local/mongo/bin/mongo 127.0.0.1:27017/openvim -uopenvim -p"
alias apa-restart="sudo apachectl restart"


safe_rm () {
  for last; do
    echo $last | grep '^-' >/dev/null 2>&1
    if [[ $? == 1 ]]; then
      if [ -e "$last" ]; then
        file=$(echo $last | awk -F/ '{print $NF}')
			trash="$HOME/.local/share/Trash/files";
		if [ ! -d "$trash" ]; then
			trash="$HOME/.Trash"
		fi
        mv $last $trash"/$file-$(date +%Y-%m-%d-%H-%M-%S)"
      else
        echo "rm: $last: No such file or directory"
      fi
    fi
  done
}


# iterm coloring
function tab-color() {
    if [[ $# == 1 ]]
    then
        # convert hex to decimal
        hex=$1
        if [[ ${hex:0:1} == "#" ]]
        then
            # strip leading hash sign
            hex=${hex:1:6}
        fi
        if [[ ${#hex} == 3 ]]
        then
            # handle 3-letter hex codes
            hex="${hex:0:1}${hex:0:1}${hex:1:1}${hex:1:1}${hex:2:1}${hex:2:1}"
        fi
        r=$(printf "%d" 0x${hex:0:2})
        g=$(printf "%d" 0x${hex:2:2})
        b=$(printf "%d" 0x${hex:4:2})
    else
        r=$1
        g=$2
        b=$3
    fi
    echo -ne "\033]6;1;bg;red;brightness;$r\a"
    echo -ne "\033]6;1;bg;green;brightness;$g\a"
    echo -ne "\033]6;1;bg;blue;brightness;$b\a"
}
function tab-red() { tab-color 203 111 111; }
function tab-green() { tab-color 6cc276; }
function tab-yellow() { tab-color "#e8e9ac"; }
function tab-blue() { tab-color 6f8ccc; }
function tab-purple() { tab-color a789d4; }
function tab-orange() { tab-color fbbc79; }
function tab-white() { tab-color fff; }
function tab-gray() { tab-color c3c3c3c; }

#alias rm='safe_rm'



#vim
alias govim="cd ~/.vim"

#alias cd
alias ..="cd .."
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias ..4="cd ../../../.."

#mysql to 50-db
alias mysql-dev='mysql -udbuser0114 -pdbpswd0114 -h192.168.1.50'


#unit
alias phpunit="/home/foursk/workspace/jjshouse/v5/vendor/blu3gui7ar/esmeralda/vendor/phpunit/phpunit/phpunit.php"
alias phpunit-coverage="/home/foursk/workspace/jjshouse/v5/vendor/blu3gui7ar/esmeralda/vendor/phpunit/phpunit/phpunit.php --coverage-html"

alias vimenc='vim -c '\''let $enc = &fileencoding | execute "!echo Encoding:  $enc" | q'\''' 

alias ssh250="sshpass -p 'Em.SWYXlzxn0Q' ssh xyzs@183.61.70.250 -p 48000"

alias ssh250-l="sshpass -p 'Yx29kKs574W5tE' ssh luyf@183.61.70.250 -p 48000"




alias ssh22="sshpass -p '3BE5EF429769ACBB7B9BB73443EA9FEE' ssh kingnet@192.168.78.22 -p 22"
alias ssh28="sshpass -p 'Em.SWYXlzxn0Q' ssh kingnet@192.168.78.28 -p 22"


alias sshausetest="sshpass -p 'xiaofeiji' ssh foursking@112.74.131.84"

#alias sshausetest="sshpass -p '1989712' ssh root@112.74.131.84"
alias sshausezhengshi="sshpass -p 'huaBEI1989712' ssh root@120.24.231.106"


alias ssh20='sshpass -p "qaz@&-%$GF2013" ssh kingnet@192.168.78.20'

alias json="python -mjson.tool"
alias vi="vim"

alias vim='/usr/local/Cellar/vim/7.4.430_1/bin/vim'
alias vimdiff='/usr/local/Cellar/vim/7.4.430_1/bin/vimdiff'

alias fuck='$(thefuck $(fc -ln -1))'
alias FUCK='fuck'


alias phptags='ctags --langmap=php:.engine.inc.module.theme.php  --php-kinds=cdf  --languages=php'

extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

source /Users/mac/.iterm2_shell_integration.zsh
